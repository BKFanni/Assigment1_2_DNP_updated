@page "/CreatePost"
@using global::Shared.DTOs
@using global::Shared.Models
@using HttpClient.ClientInterfaces
@using System.Drawing
@inject IPostService postService;
@inject NavigationManager navMgr;
@inject IUserService userService;

<div class="card">
    @if (users == null)
    {
        <label>Loading users...</label>
    }
    else if (!users.Any())
    {
        <label>No users, you cannot create a Post without assignee.</label>
    }
    else
    {
        <h3>Create Post</h3>
        <div class="form-group field">
            <label>Title:</label>
            <input type="text" @bind="postTitle" @bind:event="oninput"/>
            <br/>
            <label>Description:</label>
            <input type="text" @bind="postDesc" @bind:event="oninput"/>
            <br/>
            <label>Assignee:</label>
            <select @bind="selectedUserId" @bind:event="oninput">
                <option>Choose</option>
                @foreach (User user in users)
                {
                    <option value="@user.Id">@user.UserName</option>
                }
            </select>
            
        </div>
        <div class="button-row">
            <button @onclick="Create"  class="acceptbtn">Create</button>
        </div>
    }
</div >

          @code {
              private IEnumerable<User>? users;
              private int? selectedUserId;
              private string postTitle = "";
              private string postDesc = "";
              private string msg = "";
              private string color = "";

              protected override async Task OnInitializedAsync()
              {
                  msg = "";
                  try
                  {
                      users = await userService.GetUsers();
                  }
                  catch (Exception e)
                  {
                      Console.WriteLine(e);
                      msg = e.Message;
                  }
              }

              private async Task Create()
              {
                  msg = "";
                  Console.WriteLine("PUSHED!!!!!!!!!!!!!!");
                  
                  try
                  {
                      await postService.CreateAsync(new PostCreationDTO((int)selectedUserId, postTitle, postDesc));
                      selectedUserId = null;
                      postTitle = "";
                      postDesc = "";
                      msg = "Post successfully created.";
                      Console.WriteLine("Success");
                      color = "green";
                  }
                  catch (Exception e)
                  {
                      Console.WriteLine(e);
                      msg = e.Message;
                      color = "red";
                  }


                  
              }

          }
@if (!string.IsNullOrEmpty(msg))
                        {
                            <label style="color: @color">@msg</label>
                        }
